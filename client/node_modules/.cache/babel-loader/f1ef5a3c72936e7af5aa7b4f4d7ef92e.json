{"ast":null,"code":"var _jsxFileName = \"/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Arguments/Arguments.js\";\nimport React from 'react';\nimport Argument from './Argument/Argument';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\nimport useStyles from './styles';\nconst Arguments = () => {\n  const argument_schemas = useSelector(state => state.argument_schemas);\n  const classes = useStyles();\n  const filtered_arguments = argument_schemas.filter(argument => !argument.isReply);\n  const generateSummary = argumentSchema => {\n    const {\n      R,\n      A,\n      S,\n      G,\n      V,\n      E,\n      D,\n      P\n    } = argumentSchema;\n    if (R && A && S && G && V) {\n      return `In the current circumstances ${R}, we should perform action ${A}, which will result in new circumstances ${S}, realizing goal ${G}, promoting value ${V}`;\n    } else if (E && D && A) {\n      return `Source ${E} is an expert in subject domain ${D} containing proposition ${A}, ${E} asserts that ${A} is true, therefore ${A} is true`;\n    } else if (P && A) {\n      return `${P} is in a position to know whether ${A} is true or not, ${P} asserts that ${A} is true, therefore ${A} is true`;\n    } else {\n      return 'No summary available';\n    }\n  };\n  const handleOpenDiscussion = summary => {\n    console.log('Discussion opened with summary:', summary);\n  };\n  return !filtered_arguments.length ? /*#__PURE__*/React.createElement(CircularProgress, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(Grid, {\n    className: classes.mainContainer,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, filtered_arguments.map((argumentSchema, index) => /*#__PURE__*/React.createElement(Grid, {\n    key: index,\n    item: true,\n    xs: 12,\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Argument, {\n    argumentSchema: argumentSchema,\n    handleOpenDiscussion: () => handleOpenDiscussion(generateSummary(argumentSchema)),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }))));\n};\nexport default Arguments;","map":{"version":3,"names":["React","Argument","Grid","CircularProgress","useSelector","useStyles","Arguments","argument_schemas","state","classes","filtered_arguments","filter","argument","isReply","generateSummary","argumentSchema","R","A","S","G","V","E","D","P","handleOpenDiscussion","summary","console","log","length","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","mainContainer","container","alignItems","spacing","map","index","key","item","xs","sm"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Arguments/Arguments.js"],"sourcesContent":["import React from 'react';\nimport Argument from './Argument/Argument';\nimport { Grid, CircularProgress } from '@material-ui/core';\nimport { useSelector } from 'react-redux';\n\nimport useStyles from './styles';\n\nconst Arguments = () => {\n  const argument_schemas = useSelector((state) => state.argument_schemas);\n  const classes = useStyles();\n\n  const filtered_arguments = argument_schemas.filter(argument => !argument.isReply);\n\n  const generateSummary = (argumentSchema) => {\n    const { R, A, S, G, V, E, D, P } = argumentSchema;\n\n    if (R && A && S && G && V) {\n      return `In the current circumstances ${R}, we should perform action ${A}, which will result in new circumstances ${S}, realizing goal ${G}, promoting value ${V}`;\n    } else if (E && D && A) {\n      return `Source ${E} is an expert in subject domain ${D} containing proposition ${A}, ${E} asserts that ${A} is true, therefore ${A} is true`;\n    } else if (P && A) {\n      return `${P} is in a position to know whether ${A} is true or not, ${P} asserts that ${A} is true, therefore ${A} is true`;\n    } else {\n      return 'No summary available';\n    }\n  };\n\n  const handleOpenDiscussion = (summary) => {\n    console.log('Discussion opened with summary:', summary);\n  };\n\n\n  return (\n    !filtered_arguments.length ? <CircularProgress /> : (\n      <Grid className={classes.mainContainer} container alignItems='stretch' spacing={3}>\n        {filtered_arguments.map((argumentSchema, index) => (\n          <Grid key={index} item xs={12} sm={6}>\n            <Argument argumentSchema={argumentSchema} handleOpenDiscussion={() => handleOpenDiscussion(generateSummary(argumentSchema))} />\n          </Grid>\n        ))}\n      </Grid>\n    )\n  );\n};\n\nexport default Arguments;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,qBAAqB;AAC1C,SAASC,IAAI,EAAEC,gBAAgB,QAAQ,mBAAmB;AAC1D,SAASC,WAAW,QAAQ,aAAa;AAEzC,OAAOC,SAAS,MAAM,UAAU;AAEhC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EACtB,MAAMC,gBAAgB,GAAGH,WAAW,CAAEI,KAAK,IAAKA,KAAK,CAACD,gBAAgB,CAAC;EACvE,MAAME,OAAO,GAAGJ,SAAS,CAAC,CAAC;EAE3B,MAAMK,kBAAkB,GAAGH,gBAAgB,CAACI,MAAM,CAACC,QAAQ,IAAI,CAACA,QAAQ,CAACC,OAAO,CAAC;EAEjF,MAAMC,eAAe,GAAIC,cAAc,IAAK;IAC1C,MAAM;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC,CAAC;MAAEC;IAAE,CAAC,GAAGR,cAAc;IAEjD,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,IAAIC,CAAC,EAAE;MACzB,OAAQ,gCAA+BJ,CAAE,8BAA6BC,CAAE,4CAA2CC,CAAE,oBAAmBC,CAAE,qBAAoBC,CAAE,EAAC;IACnK,CAAC,MAAM,IAAIC,CAAC,IAAIC,CAAC,IAAIL,CAAC,EAAE;MACtB,OAAQ,UAASI,CAAE,mCAAkCC,CAAE,2BAA0BL,CAAE,KAAII,CAAE,iBAAgBJ,CAAE,uBAAsBA,CAAE,UAAS;IAC9I,CAAC,MAAM,IAAIM,CAAC,IAAIN,CAAC,EAAE;MACjB,OAAQ,GAAEM,CAAE,qCAAoCN,CAAE,oBAAmBM,CAAE,iBAAgBN,CAAE,uBAAsBA,CAAE,UAAS;IAC5H,CAAC,MAAM;MACL,OAAO,sBAAsB;IAC/B;EACF,CAAC;EAED,MAAMO,oBAAoB,GAAIC,OAAO,IAAK;IACxCC,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEF,OAAO,CAAC;EACzD,CAAC;EAGD,OACE,CAACf,kBAAkB,CAACkB,MAAM,gBAAG5B,KAAA,CAAA6B,aAAA,CAAC1B,gBAAgB;IAAA2B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,gBAC/CnC,KAAA,CAAA6B,aAAA,CAAC3B,IAAI;IAACkC,SAAS,EAAE3B,OAAO,CAAC4B,aAAc;IAACC,SAAS;IAACC,UAAU,EAAC,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAV,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC/EzB,kBAAkB,CAAC+B,GAAG,CAAC,CAAC1B,cAAc,EAAE2B,KAAK,kBAC5C1C,KAAA,CAAA6B,aAAA,CAAC3B,IAAI;IAACyC,GAAG,EAAED,KAAM;IAACE,IAAI;IAACC,EAAE,EAAE,EAAG;IAACC,EAAE,EAAE,CAAE;IAAAhB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnCnC,KAAA,CAAA6B,aAAA,CAAC5B,QAAQ;IAACc,cAAc,EAAEA,cAAe;IAACS,oBAAoB,EAAEA,CAAA,KAAMA,oBAAoB,CAACV,eAAe,CAACC,cAAc,CAAC,CAAE;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC1H,CACP,CACG,CACP;AAEL,CAAC;AAED,eAAe7B,SAAS"},"metadata":{},"sourceType":"module"}