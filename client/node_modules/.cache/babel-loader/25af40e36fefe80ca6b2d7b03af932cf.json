{"ast":null,"code":"import React,{useState}from'react';import{TextField,Button,Typography,Container}from'@material-ui/core';import useStyles from'./styles';import{useDispatch}from'react-redux';import{createPositionToKnowSchema}from'../../actions/arguments';const PositionToKnowForm=()=>{const classes=useStyles();const[formData,setFormData]=useState({P:'',A:'',isReply:false,chosenCriticalQuestion:null});const dispatch=useDispatch();const handleChange=e=>{setFormData({...formData,[e.target.name]:e.target.value});};const handleSubmit=async e=>{e.preventDefault();const payload={...formData,isAttackedBy:[]};const endpoint='https://argupedia.onrender.com/argumentSchemas/position-to-know';console.log('Payload sent to createArgument position-to-know:',payload);if('P'in formData&&'A'in formData){try{await dispatch(createPositionToKnowSchema(payload,endpoint));setFormData({P:'',A:'',isReply:false,chosenCriticalQuestion:null});}catch(error){console.log(\"Error creating position to know schema\",error);}}else{console.error('Missing properties in formData:',formData);}};return/*#__PURE__*/React.createElement(Container,{component:\"main\",maxWidth:\"xs\"},/*#__PURE__*/React.createElement(\"div\",{className:classes.paper},/*#__PURE__*/React.createElement(Typography,{component:\"h1\",variant:\"h5\"},\"Create a new position to know argument\"),/*#__PURE__*/React.createElement(\"form\",{className:classes.form,onSubmit:handleSubmit},/*#__PURE__*/React.createElement(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,id:\"P\",label:\"P is in a position to know\",name:\"P\",value:formData.P,onChange:handleChange}),/*#__PURE__*/React.createElement(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,id:\"A\",label:\"whether proposition A is true or not\",name:\"A\",value:formData.A,onChange:handleChange}),/*#__PURE__*/React.createElement(TextField,{variant:\"outlined\",margin:\"normal\",fullWidth:true,multiline:true,minRows:4,disabled:true,label:\"P asserts that proposition A is true\",value:\"\".concat(formData.P,\" asserts that proposition \\\"\").concat(formData.A,\"\\\" is true\")}),/*#__PURE__*/React.createElement(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",className:classes.submit},\"Submit\"))));};export default PositionToKnowForm;","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","useStyles","useDispatch","createPositionToKnowSchema","PositionToKnowForm","classes","formData","setFormData","P","A","isReply","chosenCriticalQuestion","dispatch","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","isAttackedBy","endpoint","console","log","error","createElement","component","maxWidth","className","paper","variant","form","onSubmit","margin","required","fullWidth","id","label","onChange","multiline","minRows","disabled","concat","type","color","submit"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Form/PositionToKnowForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Container } from '@material-ui/core';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { createPositionToKnowSchema } from '../../actions/arguments';\n\nconst PositionToKnowForm = () => {\n    const classes = useStyles();\n\n    const [formData, setFormData] = useState({\n        P: '',\n        A: '',\n        isReply: false,\n        chosenCriticalQuestion: null,\n    });\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const payload = { ...formData, isAttackedBy: [] };\n\n        const endpoint = 'https://argupedia.onrender.com/argumentSchemas/position-to-know'; \n        console.log('Payload sent to createArgument position-to-know:', payload);\n\n        if ('P' in formData && 'A' in formData) {\n            try {\n                await dispatch(createPositionToKnowSchema(payload, endpoint));\n                setFormData({\n                    P: '',\n                    A: '',\n                    isReply: false,\n                    chosenCriticalQuestion: null,\n                });      \n            } catch (error) {\n                console.log(\"Error creating position to know schema\", error);\n            }\n        } else {\n            console.error('Missing properties in formData:', formData);\n        }\n    };  \n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Create a new position to know argument\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"P\"\n                        label={`P is in a position to know`}\n                        name=\"P\"\n                        value={formData.P}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"A\"\n                        label={`whether proposition A is true or not`}\n                        name=\"A\"\n                        value={formData.A}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        multiline\n                        minRows={4}\n                        disabled\n                        label={`P asserts that proposition A is true`}\n                        value={`${formData.P} asserts that proposition \"${formData.A}\" is true`}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default PositionToKnowForm;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,SAAS,CAAEC,MAAM,CAAEC,UAAU,CAAEC,SAAS,KAAQ,mBAAmB,CAC5E,MAAO,CAAAC,SAAS,KAAM,UAAU,CAChC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,0BAA0B,KAAQ,yBAAyB,CAEpE,KAAM,CAAAC,kBAAkB,CAAGA,CAAA,GAAM,CAC7B,KAAM,CAAAC,OAAO,CAAGJ,SAAS,CAAC,CAAC,CAE3B,KAAM,CAACK,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,CACrCY,CAAC,CAAE,EAAE,CACLC,CAAC,CAAE,EAAE,CACLC,OAAO,CAAE,KAAK,CACdC,sBAAsB,CAAE,IAC5B,CAAC,CAAC,CAEF,KAAM,CAAAC,QAAQ,CAAGV,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAW,YAAY,CAAIC,CAAC,EAAK,CACxBP,WAAW,CAAC,CAAE,GAAGD,QAAQ,CAAE,CAACQ,CAAC,CAACC,MAAM,CAACC,IAAI,EAAGF,CAAC,CAACC,MAAM,CAACE,KAAM,CAAC,CAAC,CACjE,CAAC,CAED,KAAM,CAAAC,YAAY,CAAG,KAAO,CAAAJ,CAAC,EAAK,CAC9BA,CAAC,CAACK,cAAc,CAAC,CAAC,CAElB,KAAM,CAAAC,OAAO,CAAG,CAAE,GAAGd,QAAQ,CAAEe,YAAY,CAAE,EAAG,CAAC,CAEjD,KAAM,CAAAC,QAAQ,CAAG,iEAAiE,CAClFC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAEJ,OAAO,CAAC,CAExE,GAAI,GAAG,EAAI,CAAAd,QAAQ,EAAI,GAAG,EAAI,CAAAA,QAAQ,CAAE,CACpC,GAAI,CACA,KAAM,CAAAM,QAAQ,CAACT,0BAA0B,CAACiB,OAAO,CAAEE,QAAQ,CAAC,CAAC,CAC7Df,WAAW,CAAC,CACRC,CAAC,CAAE,EAAE,CACLC,CAAC,CAAE,EAAE,CACLC,OAAO,CAAE,KAAK,CACdC,sBAAsB,CAAE,IAC5B,CAAC,CAAC,CACN,CAAE,MAAOc,KAAK,CAAE,CACZF,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAEC,KAAK,CAAC,CAChE,CACJ,CAAC,IAAM,CACHF,OAAO,CAACE,KAAK,CAAC,iCAAiC,CAAEnB,QAAQ,CAAC,CAC9D,CACJ,CAAC,CAED,mBACIX,KAAA,CAAA+B,aAAA,CAAC1B,SAAS,EAAC2B,SAAS,CAAC,MAAM,CAACC,QAAQ,CAAC,IAAI,eACrCjC,KAAA,CAAA+B,aAAA,QAAKG,SAAS,CAAExB,OAAO,CAACyB,KAAM,eAC1BnC,KAAA,CAAA+B,aAAA,CAAC3B,UAAU,EAAC4B,SAAS,CAAC,IAAI,CAACI,OAAO,CAAC,IAAI,EAAC,wCAE5B,CAAC,cACbpC,KAAA,CAAA+B,aAAA,SAAMG,SAAS,CAAExB,OAAO,CAAC2B,IAAK,CAACC,QAAQ,CAAEf,YAAa,eAClDvB,KAAA,CAAA+B,aAAA,CAAC7B,SAAS,EACNkC,OAAO,CAAC,UAAU,CAClBG,MAAM,CAAC,QAAQ,CACfC,QAAQ,MACRC,SAAS,MACTC,EAAE,CAAC,GAAG,CACNC,KAAK,6BAA+B,CACpCtB,IAAI,CAAC,GAAG,CACRC,KAAK,CAAEX,QAAQ,CAACE,CAAE,CAClB+B,QAAQ,CAAE1B,YAAa,CAC1B,CAAC,cACFlB,KAAA,CAAA+B,aAAA,CAAC7B,SAAS,EACNkC,OAAO,CAAC,UAAU,CAClBG,MAAM,CAAC,QAAQ,CACfC,QAAQ,MACRC,SAAS,MACTC,EAAE,CAAC,GAAG,CACNC,KAAK,uCAAyC,CAC9CtB,IAAI,CAAC,GAAG,CACRC,KAAK,CAAEX,QAAQ,CAACG,CAAE,CAClB8B,QAAQ,CAAE1B,YAAa,CAC1B,CAAC,cACFlB,KAAA,CAAA+B,aAAA,CAAC7B,SAAS,EACNkC,OAAO,CAAC,UAAU,CAClBG,MAAM,CAAC,QAAQ,CACfE,SAAS,MACTI,SAAS,MACTC,OAAO,CAAE,CAAE,CACXC,QAAQ,MACRJ,KAAK,uCAAyC,CAC9CrB,KAAK,IAAA0B,MAAA,CAAKrC,QAAQ,CAACE,CAAC,iCAAAmC,MAAA,CAA8BrC,QAAQ,CAACG,CAAC,cAAY,CAC3E,CAAC,cACFd,KAAA,CAAA+B,aAAA,CAAC5B,MAAM,EACH8C,IAAI,CAAC,QAAQ,CACbR,SAAS,MACTL,OAAO,CAAC,WAAW,CACnBc,KAAK,CAAC,SAAS,CACfhB,SAAS,CAAExB,OAAO,CAACyC,MAAO,EAC7B,QAEO,CACN,CACL,CACE,CAAC,CAEpB,CAAC,CAED,cAAe,CAAA1C,kBAAkB"},"metadata":{},"sourceType":"module"}