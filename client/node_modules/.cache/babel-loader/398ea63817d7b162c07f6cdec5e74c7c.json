{"ast":null,"code":"var _jsxFileName = \"/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/App.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getArgumentSchemas } from \"./actions/arguments.js\";\nimport Arguments from \"./components/Arguments/Arguments.js\";\nimport ActionArgumentForm from \"./components/Form/ActionArgumentForm.js\";\nimport ExpertOpinionForm from \"./components/Form/ExpertOpinionArgumentForm.js\";\nimport PositionToKnowForm from \"./components/Form/PositionToKnowForm.js\";\nimport useStyles from \"./styles.js\";\nimport Graph from \"./components/Graph/Graph.js\";\nconst App = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const argumentSchemas = useSelector(state => state.argumentSchemas); // Get the argument schemas from Redux state\n  const [selectedForm, setSelectedForm] = useState(\"ActionArgumentForm\");\n  const [selectedArgument, setSelectedArgument] = useState(null);\n  useEffect(() => {\n    dispatch(getArgumentSchemas());\n  }, [dispatch]);\n  const handleFormChange = event => {\n    setSelectedForm(event.target.value);\n  };\n  const handleArgumentSelect = argument => {\n    setSelectedArgument(argument);\n  };\n\n  // Filter arguments based on isReply field\n  const filtered_arguments = argumentSchemas.filter(argument => !argument.isReply);\n  return /*#__PURE__*/React.createElement(Container, {\n    maxWidth: \"lg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AppBar, {\n    className: classes.appBar,\n    position: \"static\",\n    color: \"inherit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.heading,\n    variant: \"h2\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, \"Argupedia\")), /*#__PURE__*/React.createElement(Grow, {\n    in: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justifyContent: \"space-between\",\n    alignItems: \"stretch\",\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Arguments, {\n    arguments: filtered_arguments,\n    onArgumentSelect: handleArgumentSelect,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"argument-type-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 17\n    }\n  }, \"Select Argument Type\"), /*#__PURE__*/React.createElement(Select, {\n    labelId: \"argument-type-label\",\n    id: \"argument-type\",\n    value: selectedForm,\n    onChange: handleFormChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"ActionArgumentForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 19\n    }\n  }, \"Action Argument\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"ExpertOpinionForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }\n  }, \"Expert Opinion Argument\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"PositionToKnowForm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, \"Position to Know Argument\"))), selectedForm === \"ActionArgumentForm\" && /*#__PURE__*/React.createElement(ActionArgumentForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 57\n    }\n  }), selectedForm === \"ExpertOpinionForm\" && /*#__PURE__*/React.createElement(ExpertOpinionForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 56\n    }\n  }), selectedForm === \"PositionToKnowForm\" && /*#__PURE__*/React.createElement(PositionToKnowForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 57\n    }\n  }))))), selectedArgument && /*#__PURE__*/React.createElement(Graph, {\n    argument: selectedArgument,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 28\n    }\n  }));\n};\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","Container","AppBar","Typography","Grow","Grid","FormControl","InputLabel","Select","MenuItem","useDispatch","useSelector","getArgumentSchemas","Arguments","ActionArgumentForm","ExpertOpinionForm","PositionToKnowForm","useStyles","Graph","App","classes","dispatch","argumentSchemas","state","selectedForm","setSelectedForm","selectedArgument","setSelectedArgument","handleFormChange","event","target","value","handleArgumentSelect","argument","filtered_arguments","filter","isReply","createElement","maxWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","appBar","position","color","heading","variant","align","in","container","justifyContent","alignItems","spacing","item","xs","sm","arguments","onArgumentSelect","fullWidth","id","labelId","onChange"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getArgumentSchemas } from \"./actions/arguments.js\";\nimport Arguments from \"./components/Arguments/Arguments.js\";\nimport ActionArgumentForm from \"./components/Form/ActionArgumentForm.js\";\nimport ExpertOpinionForm from \"./components/Form/ExpertOpinionArgumentForm.js\";\nimport PositionToKnowForm from \"./components/Form/PositionToKnowForm.js\";\nimport useStyles from \"./styles.js\";\n\nimport Graph from \"./components/Graph/Graph.js\";\n\nconst App = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const argumentSchemas = useSelector(state => state.argumentSchemas); // Get the argument schemas from Redux state\n  const [selectedForm, setSelectedForm] = useState(\"ActionArgumentForm\");\n  const [selectedArgument, setSelectedArgument] = useState(null);\n\n  useEffect(() => {\n    dispatch(getArgumentSchemas());\n  }, [dispatch]);\n\n  const handleFormChange = (event) => {\n    setSelectedForm(event.target.value);\n  };\n\n  const handleArgumentSelect = (argument) => {\n    setSelectedArgument(argument);\n  };\n\n  // Filter arguments based on isReply field\n  const filtered_arguments = argumentSchemas.filter(argument => !argument.isReply);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Argupedia\n        </Typography>\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <Arguments arguments={filtered_arguments} onArgumentSelect={handleArgumentSelect} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <FormControl fullWidth>\n                <InputLabel id=\"argument-type-label\">Select Argument Type</InputLabel>\n                <Select\n                  labelId=\"argument-type-label\"\n                  id=\"argument-type\"\n                  value={selectedForm}\n                  onChange={handleFormChange}\n                >\n                  <MenuItem value=\"ActionArgumentForm\">Action Argument</MenuItem>\n                  <MenuItem value=\"ExpertOpinionForm\">Expert Opinion Argument</MenuItem>\n                  <MenuItem value=\"PositionToKnowForm\">Position to Know Argument</MenuItem>\n                </Select>\n              </FormControl>\n              {selectedForm === \"ActionArgumentForm\" && <ActionArgumentForm />}\n              {selectedForm === \"ExpertOpinionForm\" && <ExpertOpinionForm />}\n              {selectedForm === \"PositionToKnowForm\" && <PositionToKnowForm />}\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n      {selectedArgument && <Graph argument={selectedArgument} />}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}