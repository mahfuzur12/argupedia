{"ast":null,"code":"import * as api from '../api';\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const CREATE_ACTION_SCHEMA = 'CREATE_ACTION_SCHEMA';\nexport const CREATE_EXPERT_OPINION_SCHEMA = 'CREATE_EXPERT_OPINION_SCHEMA';\nexport const CREATE_POSITION_TO_KNOW_SCHEMA = 'CREATE_POSITION_TO_KNOW_SCHEMA';\nexport const UPDATE_IS_ATTACKED_BY = 'UPDATE_IS_ATTACKED_BY';\nexport const updateIsAttackedBy = (id, attackerId) => async dispatch => {\n  try {\n    await api.updateIsAttackedBy(id, attackerId);\n    dispatch({\n      type: 'UPDATE_IS_ATTACKED_BY',\n      payload: {\n        id,\n        attackerId\n      }\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const getArgumentSchemas = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchArgumentSchemas();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createActionSchema = actionSchema => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createActionSchema(actionSchema);\n    dispatch({\n      type: CREATE_ACTION_SCHEMA,\n      payload: data\n    });\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createExpertOpinionSchema = expertOpinionSchema => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createExpertOpinionSchema(expertOpinionSchema);\n    dispatch({\n      type: CREATE_EXPERT_OPINION_SCHEMA,\n      payload: data\n    });\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPositionToKnowSchema = positionToKnowSchema => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPositionToKnowSchema(positionToKnowSchema);\n    dispatch({\n      type: CREATE_POSITION_TO_KNOW_SCHEMA,\n      payload: data\n    });\n    return data;\n  } catch (error) {\n    console.log(error.message);\n  }\n};","map":{"version":3,"names":["api","FETCH_ALL","CREATE_ACTION_SCHEMA","CREATE_EXPERT_OPINION_SCHEMA","CREATE_POSITION_TO_KNOW_SCHEMA","UPDATE_IS_ATTACKED_BY","updateIsAttackedBy","id","attackerId","dispatch","type","payload","error","console","log","message","getArgumentSchemas","data","fetchArgumentSchemas","createActionSchema","actionSchema","createExpertOpinionSchema","expertOpinionSchema","createPositionToKnowSchema","positionToKnowSchema"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/actions/arguments.js"],"sourcesContent":["import * as api from '../api';\n\nexport const FETCH_ALL = 'FETCH_ALL';\nexport const CREATE_ACTION_SCHEMA = 'CREATE_ACTION_SCHEMA';\nexport const CREATE_EXPERT_OPINION_SCHEMA = 'CREATE_EXPERT_OPINION_SCHEMA';\nexport const CREATE_POSITION_TO_KNOW_SCHEMA = 'CREATE_POSITION_TO_KNOW_SCHEMA';\nexport const UPDATE_IS_ATTACKED_BY = 'UPDATE_IS_ATTACKED_BY';\n\nexport const updateIsAttackedBy = (id, attackerId) => async (dispatch) => {\n    try {\n        await api.updateIsAttackedBy(id, attackerId);\n        dispatch({ type: 'UPDATE_IS_ATTACKED_BY', payload: { id, attackerId }});\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const getArgumentSchemas = () => async (dispatch) => {\n    try {\n        const { data } = await api.fetchArgumentSchemas();\n        dispatch({ type: FETCH_ALL, payload: data });\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const createActionSchema = (actionSchema) => async (dispatch) => {\n    try {\n        const { data } = await api.createActionSchema(actionSchema);\n        dispatch({ type: CREATE_ACTION_SCHEMA, payload: data });\n        return data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const createExpertOpinionSchema = (expertOpinionSchema) => async (dispatch) => {\n    try {\n        const { data } = await api.createExpertOpinionSchema(expertOpinionSchema);\n        dispatch({ type: CREATE_EXPERT_OPINION_SCHEMA, payload: data });\n        return data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n\nexport const createPositionToKnowSchema = (positionToKnowSchema) => async (dispatch) => {\n    try {\n        const { data } = await api.createPositionToKnowSchema(positionToKnowSchema);\n        dispatch({ type: CREATE_POSITION_TO_KNOW_SCHEMA, payload: data });\n        return data;\n    } catch (error) {\n        console.log(error.message);\n    }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,GAAG,MAAM,QAAQ;AAE7B,OAAO,MAAMC,SAAS,GAAG,WAAW;AACpC,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,4BAA4B,GAAG,8BAA8B;AAC1E,OAAO,MAAMC,8BAA8B,GAAG,gCAAgC;AAC9E,OAAO,MAAMC,qBAAqB,GAAG,uBAAuB;AAE5D,OAAO,MAAMC,kBAAkB,GAAGA,CAACC,EAAE,EAAEC,UAAU,KAAK,MAAOC,QAAQ,IAAK;EACtE,IAAI;IACA,MAAMT,GAAG,CAACM,kBAAkB,CAACC,EAAE,EAAEC,UAAU,CAAC;IAC5CC,QAAQ,CAAC;MAAEC,IAAI,EAAE,uBAAuB;MAAEC,OAAO,EAAE;QAAEJ,EAAE;QAAEC;MAAW;IAAC,CAAC,CAAC;EAC3E,CAAC,CAAC,OAAOI,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAGA,CAAA,KAAM,MAAOP,QAAQ,IAAK;EACxD,IAAI;IACA,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACkB,oBAAoB,CAAC,CAAC;IACjDT,QAAQ,CAAC;MAAEC,IAAI,EAAET,SAAS;MAAEU,OAAO,EAAEM;IAAK,CAAC,CAAC;EAChD,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMI,kBAAkB,GAAIC,YAAY,IAAK,MAAOX,QAAQ,IAAK;EACpE,IAAI;IACA,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACmB,kBAAkB,CAACC,YAAY,CAAC;IAC3DX,QAAQ,CAAC;MAAEC,IAAI,EAAER,oBAAoB;MAAES,OAAO,EAAEM;IAAK,CAAC,CAAC;IACvD,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMM,yBAAyB,GAAIC,mBAAmB,IAAK,MAAOb,QAAQ,IAAK;EAClF,IAAI;IACA,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACqB,yBAAyB,CAACC,mBAAmB,CAAC;IACzEb,QAAQ,CAAC;MAAEC,IAAI,EAAEP,4BAA4B;MAAEQ,OAAO,EAAEM;IAAK,CAAC,CAAC;IAC/D,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC;AAED,OAAO,MAAMQ,0BAA0B,GAAIC,oBAAoB,IAAK,MAAOf,QAAQ,IAAK;EACpF,IAAI;IACA,MAAM;MAAEQ;IAAK,CAAC,GAAG,MAAMjB,GAAG,CAACuB,0BAA0B,CAACC,oBAAoB,CAAC;IAC3Ef,QAAQ,CAAC;MAAEC,IAAI,EAAEN,8BAA8B;MAAEO,OAAO,EAAEM;IAAK,CAAC,CAAC;IACjE,OAAOA,IAAI;EACf,CAAC,CAAC,OAAOL,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAACG,OAAO,CAAC;EAC9B;AACJ,CAAC"},"metadata":{},"sourceType":"module"}