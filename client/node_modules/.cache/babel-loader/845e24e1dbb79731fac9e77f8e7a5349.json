{"ast":null,"code":"var _jsxFileName = \"/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Graph/Graph.js\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nconst Graph = ({\n  argumentSchema,\n  handleNodeClick\n}) => {\n  const svgRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    // Adjust width and height of the SVG container\n    const containerWidth = window.innerWidth * 0.9; // 90% of the window width\n    const containerHeight = 300; // Fixed height\n\n    svg.attr('width', containerWidth).attr('height', containerHeight);\n\n    // Clear existing content\n    svg.selectAll('*').remove();\n\n    // Render nodes\n    if (argumentSchema) {\n      const nodes = [{\n        id: argumentSchema._id,\n        label: argumentSchema.title\n      }];\n      const circle = svg.selectAll('circle').data(nodes).enter().append('circle').attr('cx', containerWidth / 2).attr('cy', containerHeight / 2).attr('r', 20).attr('fill', '#1f77b4').on('click', () => {\n        if (handleNodeClick) {\n          handleNodeClick(argumentSchema._id);\n        }\n        // Toggle stroke color upon click\n        const isClicked = circle.attr('stroke') === 'red';\n        circle.attr('stroke', isClicked ? 'none' : 'red');\n      });\n    }\n  }, [argumentSchema, handleNodeClick]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  });\n};\nexport default Graph;","map":{"version":3,"names":["React","useEffect","useRef","d3","Graph","argumentSchema","handleNodeClick","svgRef","svg","select","current","containerWidth","window","innerWidth","containerHeight","attr","selectAll","remove","nodes","id","_id","label","title","circle","data","enter","append","on","isClicked","createElement","ref","style","border","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Graph/Graph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst Graph = ({ argumentSchema, handleNodeClick }) => {\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    // Adjust width and height of the SVG container\n    const containerWidth = window.innerWidth * 0.9; // 90% of the window width\n    const containerHeight = 300; // Fixed height\n\n    svg.attr('width', containerWidth)\n       .attr('height', containerHeight);\n    \n    // Clear existing content\n    svg.selectAll('*').remove();\n\n    // Render nodes\n    if (argumentSchema) {\n      const nodes = [{ id: argumentSchema._id, label: argumentSchema.title }];\n      \n      const circle = svg.selectAll('circle')\n         .data(nodes)\n         .enter()\n         .append('circle')\n         .attr('cx', containerWidth / 2)\n         .attr('cy', containerHeight / 2)\n         .attr('r', 20)\n         .attr('fill', '#1f77b4')\n         .on('click', () => {\n           if (handleNodeClick) {\n             handleNodeClick(argumentSchema._id);\n           }\n           // Toggle stroke color upon click\n           const isClicked = circle.attr('stroke') === 'red';\n           circle.attr('stroke', isClicked ? 'none' : 'red');\n         });\n    }\n\n  }, [argumentSchema, handleNodeClick]);\n\n  return (\n    <svg ref={svgRef} style={{ border: '1px solid #ccc' }}>\n      {/* Nodes and links rendering code */}\n    </svg>\n  );\n};\n\nexport default Graph;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAExB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EACrD,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMO,GAAG,GAAGL,EAAE,CAACM,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;;IAErC;IACA,MAAMC,cAAc,GAAGC,MAAM,CAACC,UAAU,GAAG,GAAG,CAAC,CAAC;IAChD,MAAMC,eAAe,GAAG,GAAG,CAAC,CAAC;;IAE7BN,GAAG,CAACO,IAAI,CAAC,OAAO,EAAEJ,cAAc,CAAC,CAC7BI,IAAI,CAAC,QAAQ,EAAED,eAAe,CAAC;;IAEnC;IACAN,GAAG,CAACQ,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;;IAE3B;IACA,IAAIZ,cAAc,EAAE;MAClB,MAAMa,KAAK,GAAG,CAAC;QAAEC,EAAE,EAAEd,cAAc,CAACe,GAAG;QAAEC,KAAK,EAAEhB,cAAc,CAACiB;MAAM,CAAC,CAAC;MAEvE,MAAMC,MAAM,GAAGf,GAAG,CAACQ,SAAS,CAAC,QAAQ,CAAC,CAClCQ,IAAI,CAACN,KAAK,CAAC,CACXO,KAAK,CAAC,CAAC,CACPC,MAAM,CAAC,QAAQ,CAAC,CAChBX,IAAI,CAAC,IAAI,EAAEJ,cAAc,GAAG,CAAC,CAAC,CAC9BI,IAAI,CAAC,IAAI,EAAED,eAAe,GAAG,CAAC,CAAC,CAC/BC,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBY,EAAE,CAAC,OAAO,EAAE,MAAM;QACjB,IAAIrB,eAAe,EAAE;UACnBA,eAAe,CAACD,cAAc,CAACe,GAAG,CAAC;QACrC;QACA;QACA,MAAMQ,SAAS,GAAGL,MAAM,CAACR,IAAI,CAAC,QAAQ,CAAC,KAAK,KAAK;QACjDQ,MAAM,CAACR,IAAI,CAAC,QAAQ,EAAEa,SAAS,GAAG,MAAM,GAAG,KAAK,CAAC;MACnD,CAAC,CAAC;IACP;EAEF,CAAC,EAAE,CAACvB,cAAc,EAAEC,eAAe,CAAC,CAAC;EAErC,oBACEN,KAAA,CAAA6B,aAAA;IAAKC,GAAG,EAAEvB,MAAO;IAACwB,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAEjD,CAAC;AAEV,CAAC;AAED,eAAelC,KAAK"},"metadata":{},"sourceType":"module"}