{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import{Container,AppBar,Typography,Grow,Grid,FormControl,InputLabel,Select,MenuItem}from\"@material-ui/core\";import{useDispatch,useSelector}from\"react-redux\";import{getArgumentSchemas}from\"./actions/arguments.js\";import Arguments from\"./components/Arguments/Arguments.js\";import ActionArgumentForm from\"./components/Form/ActionArgumentForm.js\";import ExpertOpinionForm from\"./components/Form/ExpertOpinionArgumentForm.js\";import PositionToKnowForm from\"./components/Form/PositionToKnowForm.js\";import useStyles from\"./styles.js\";import Graph from\"./components/Graph/Graph.js\";const App=()=>{const classes=useStyles();const dispatch=useDispatch();const argumentSchemas=useSelector(state=>state.argumentSchemas);const[selectedForm,setSelectedForm]=useState(\"ActionArgumentForm\");const[selectedArgument,setSelectedArgument]=useState(null);useEffect(()=>{dispatch(getArgumentSchemas());},[dispatch]);const handleFormChange=event=>{setSelectedForm(event.target.value);};const handleArgumentSelect=argument=>{setSelectedArgument(argument);};const filtered_arguments=argumentSchemas.filter(argument=>!argument.isReply);return/*#__PURE__*/React.createElement(Container,{maxWidth:\"lg\"},/*#__PURE__*/React.createElement(AppBar,{className:classes.appBar,position:\"static\",color:\"inherit\"},/*#__PURE__*/React.createElement(Typography,{className:classes.heading,variant:\"h2\",align:\"center\"},\"Argupedia\")),/*#__PURE__*/React.createElement(Grow,{in:true},/*#__PURE__*/React.createElement(Container,null,/*#__PURE__*/React.createElement(Grid,{container:true,justifyContent:\"space-between\",alignItems:\"stretch\",spacing:3},/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:7},/*#__PURE__*/React.createElement(Arguments,{arguments:filtered_arguments,onArgumentSelect:handleArgumentSelect})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:12,sm:4},/*#__PURE__*/React.createElement(FormControl,{fullWidth:true},/*#__PURE__*/React.createElement(InputLabel,{id:\"argument-type-label\"},\"Select Argument Type\"),/*#__PURE__*/React.createElement(Select,{labelId:\"argument-type-label\",id:\"argument-type\",value:selectedForm,onChange:handleFormChange},/*#__PURE__*/React.createElement(MenuItem,{value:\"ActionArgumentForm\"},\"Action Argument\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"ExpertOpinionForm\"},\"Expert Opinion Argument\"),/*#__PURE__*/React.createElement(MenuItem,{value:\"PositionToKnowForm\"},\"Position to Know Argument\"))),selectedForm===\"ActionArgumentForm\"&&/*#__PURE__*/React.createElement(ActionArgumentForm,null),selectedForm===\"ExpertOpinionForm\"&&/*#__PURE__*/React.createElement(ExpertOpinionForm,null),selectedForm===\"PositionToKnowForm\"&&/*#__PURE__*/React.createElement(PositionToKnowForm,null))))),selectedArgument&&/*#__PURE__*/React.createElement(Graph,{argument:selectedArgument}));};export default App;","map":{"version":3,"names":["React","useState","useEffect","Container","AppBar","Typography","Grow","Grid","FormControl","InputLabel","Select","MenuItem","useDispatch","useSelector","getArgumentSchemas","Arguments","ActionArgumentForm","ExpertOpinionForm","PositionToKnowForm","useStyles","Graph","App","classes","dispatch","argumentSchemas","state","selectedForm","setSelectedForm","selectedArgument","setSelectedArgument","handleFormChange","event","target","value","handleArgumentSelect","argument","filtered_arguments","filter","isReply","createElement","maxWidth","className","appBar","position","color","heading","variant","align","in","container","justifyContent","alignItems","spacing","item","xs","sm","arguments","onArgumentSelect","fullWidth","id","labelId","onChange"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, AppBar, Typography, Grow, Grid, FormControl, InputLabel, Select, MenuItem } from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport { getArgumentSchemas } from \"./actions/arguments.js\";\nimport Arguments from \"./components/Arguments/Arguments.js\";\nimport ActionArgumentForm from \"./components/Form/ActionArgumentForm.js\";\nimport ExpertOpinionForm from \"./components/Form/ExpertOpinionArgumentForm.js\";\nimport PositionToKnowForm from \"./components/Form/PositionToKnowForm.js\";\nimport useStyles from \"./styles.js\";\n\nimport Graph from \"./components/Graph/Graph.js\";\n\nconst App = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const argumentSchemas = useSelector(state => state.argumentSchemas);\n  const [selectedForm, setSelectedForm] = useState(\"ActionArgumentForm\");\n  const [selectedArgument, setSelectedArgument] = useState(null);\n\n  useEffect(() => {\n    dispatch(getArgumentSchemas());\n  }, [dispatch]);\n\n  const handleFormChange = (event) => {\n    setSelectedForm(event.target.value);\n  };\n\n  const handleArgumentSelect = (argument) => {\n    setSelectedArgument(argument);\n  };\n\n  const filtered_arguments = argumentSchemas.filter(argument => !argument.isReply);\n\n  return (\n    <Container maxWidth=\"lg\">\n      <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n        <Typography className={classes.heading} variant=\"h2\" align=\"center\">\n          Argupedia\n        </Typography>\n      </AppBar>\n      <Grow in>\n        <Container>\n          <Grid container justifyContent=\"space-between\" alignItems=\"stretch\" spacing={3}>\n            <Grid item xs={12} sm={7}>\n              <Arguments arguments={filtered_arguments} onArgumentSelect={handleArgumentSelect} />\n            </Grid>\n            <Grid item xs={12} sm={4}>\n              <FormControl fullWidth>\n                <InputLabel id=\"argument-type-label\">Select Argument Type</InputLabel>\n                <Select\n                  labelId=\"argument-type-label\"\n                  id=\"argument-type\"\n                  value={selectedForm}\n                  onChange={handleFormChange}\n                >\n                  <MenuItem value=\"ActionArgumentForm\">Action Argument</MenuItem>\n                  <MenuItem value=\"ExpertOpinionForm\">Expert Opinion Argument</MenuItem>\n                  <MenuItem value=\"PositionToKnowForm\">Position to Know Argument</MenuItem>\n                </Select>\n              </FormControl>\n              {selectedForm === \"ActionArgumentForm\" && <ActionArgumentForm />}\n              {selectedForm === \"ExpertOpinionForm\" && <ExpertOpinionForm />}\n              {selectedForm === \"PositionToKnowForm\" && <PositionToKnowForm />}\n            </Grid>\n          </Grid>\n        </Container>\n      </Grow>\n      {selectedArgument && <Graph argument={selectedArgument} />}\n    </Container>\n  );\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}