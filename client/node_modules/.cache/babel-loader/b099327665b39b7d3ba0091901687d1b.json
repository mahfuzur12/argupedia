{"ast":null,"code":"var _jsxFileName = \"/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Graph/Graph.js\";\nimport React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\nconst Graph = ({\n  argumentSchema,\n  handleNodeClick\n}) => {\n  const svgRef = useRef(null);\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const containerWidth = window.innerWidth;\n    const containerHeight = window.innerHeight;\n    svg.attr('width', containerWidth).attr('height', containerHeight);\n    svg.selectAll('*').remove();\n    if (argumentSchema && argumentSchema._id) {\n      const startingNode = {\n        id: argumentSchema._id,\n        label: argumentSchema._id\n      };\n      console.log(\"Starting Node:\", startingNode);\n      const nodesGroup = svg.append('g');\n      const startingNodeRadius = 20;\n      nodesGroup.append('circle').attr('cx', containerWidth / 3).attr('cy', containerHeight / 2).attr('r', startingNodeRadius).attr('fill', '#1f77b4').on('click', () => {\n        if (handleNodeClick) {\n          handleNodeClick(startingNode.id);\n        }\n      });\n      if (argumentSchema.isAttackedBy) {\n        const attackerSpacing = 100;\n        const initialY = containerHeight / 2;\n        argumentSchema.isAttackedBy.forEach((attackerId, index) => {\n          const attackerNode = {\n            id: attackerId,\n            label: attackerId\n          };\n          console.log(\"Attacker Node:\", attackerNode);\n          const attackerY = initialY + (index % 2 === 0 ? -1 : 1) * (index + 1) * attackerSpacing / 2;\n          nodesGroup.append('circle').attr('cx', containerWidth / 3 + attackerSpacing).attr('cy', attackerY).attr('r', 20).attr('fill', '#ff0000').on('click', () => {\n            if (handleNodeClick) {\n              handleNodeClick(attackerNode.id);\n            }\n          });\n          const arrowStartX = containerWidth / 3 + attackerSpacing;\n          const arrowStartY = attackerY;\n          const arrowEndX = containerWidth / 3;\n          const arrowEndY = containerHeight / 2;\n          const angle = Math.atan2(arrowStartY - arrowEndY, arrowStartX - arrowEndX);\n          const arrowHeadX = arrowEndX + Math.cos(angle) * startingNodeRadius;\n          const arrowHeadY = arrowEndY + Math.sin(angle) * startingNodeRadius;\n          const arrowHeadSize = 40;\n          const arrow = d3.symbol().type(d3.symbolTriangle).size(arrowHeadSize);\n          const lineData = [[arrowStartX, arrowStartY], [arrowHeadX, arrowHeadY]];\n          nodesGroup.append('path').attr('d', arrow).attr('transform', `translate(${arrowEndX},${arrowEndY}) rotate(${angle * (180 / Math.PI) + 90})`).attr('fill', '#000000');\n          nodesGroup.append('path').attr('d', d3.line()(lineData)).attr('stroke', '#000000').attr('stroke-width', 2);\n        });\n      }\n    }\n  }, [argumentSchema, handleNodeClick]);\n  return /*#__PURE__*/React.createElement(\"svg\", {\n    ref: svgRef,\n    style: {\n      border: '1px solid #ccc'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  });\n};\nexport default Graph;","map":{"version":3,"names":["React","useEffect","useRef","d3","Graph","argumentSchema","handleNodeClick","svgRef","svg","select","current","containerWidth","window","innerWidth","containerHeight","innerHeight","attr","selectAll","remove","_id","startingNode","id","label","console","log","nodesGroup","append","startingNodeRadius","on","isAttackedBy","attackerSpacing","initialY","forEach","attackerId","index","attackerNode","attackerY","arrowStartX","arrowStartY","arrowEndX","arrowEndY","angle","Math","atan2","arrowHeadX","cos","arrowHeadY","sin","arrowHeadSize","arrow","symbol","type","symbolTriangle","size","lineData","PI","line","createElement","ref","style","border","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Graph/Graph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nconst Graph = ({ argumentSchema, handleNodeClick }) => {\n  const svgRef = useRef(null);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n\n    const containerWidth = window.innerWidth; \n    const containerHeight = window.innerHeight;\n\n    svg.attr('width', containerWidth)\n      .attr('height', containerHeight);\n\n    svg.selectAll('*').remove();\n\n    if (argumentSchema && argumentSchema._id) {\n      const startingNode = { id: argumentSchema._id, label: argumentSchema._id };\n\n      console.log(\"Starting Node:\", startingNode);\n\n      const nodesGroup = svg.append('g');\n\n      const startingNodeRadius = 20; \n      nodesGroup.append('circle')\n        .attr('cx', containerWidth / 3)\n        .attr('cy', containerHeight / 2)\n        .attr('r', startingNodeRadius)\n        .attr('fill', '#1f77b4')\n        .on('click', () => {\n          if (handleNodeClick) {\n            handleNodeClick(startingNode.id);\n          }\n        });\n\n      if (argumentSchema.isAttackedBy) {\n        const attackerSpacing = 100;\n        const initialY = containerHeight / 2; \n\n        argumentSchema.isAttackedBy.forEach((attackerId, index) => {\n          const attackerNode = { id: attackerId, label: attackerId }; \n\n          console.log(\"Attacker Node:\", attackerNode);\n\n          const attackerY = initialY + (index % 2 === 0 ? -1 : 1) * (index + 1) * attackerSpacing / 2;\n\n          nodesGroup.append('circle')\n            .attr('cx', containerWidth / 3 + attackerSpacing) \n            .attr('cy', attackerY) \n            .attr('r', 20)\n            .attr('fill', '#ff0000') \n            .on('click', () => {\n              if (handleNodeClick) {\n                handleNodeClick(attackerNode.id);\n              }\n            });\n\n          const arrowStartX = containerWidth / 3 + attackerSpacing;\n          const arrowStartY = attackerY;\n          const arrowEndX = containerWidth / 3;\n          const arrowEndY = containerHeight / 2;\n\n          const angle = Math.atan2(arrowStartY - arrowEndY, arrowStartX - arrowEndX);\n\n          const arrowHeadX = arrowEndX + Math.cos(angle) * startingNodeRadius;\n          const arrowHeadY = arrowEndY + Math.sin(angle) * startingNodeRadius;\n\n          const arrowHeadSize = 40; \n          const arrow = d3.symbol().type(d3.symbolTriangle).size(arrowHeadSize);\n          const lineData = [\n            [arrowStartX, arrowStartY],\n            [arrowHeadX, arrowHeadY]\n          ];\n\n          nodesGroup.append('path')\n            .attr('d', arrow)\n            .attr('transform', `translate(${arrowEndX},${arrowEndY}) rotate(${angle * (180 / Math.PI) + 90})`) \n            .attr('fill', '#000000'); \n\n          nodesGroup.append('path')\n            .attr('d', d3.line()(lineData))\n            .attr('stroke', '#000000') \n            .attr('stroke-width', 2);\n        });\n      }\n    }\n\n  }, [argumentSchema, handleNodeClick]);\n\n  return (\n    <svg ref={svgRef} style={{ border: '1px solid #ccc' }}>\n      {}\n    </svg>\n  );\n};\n\nexport default Graph;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAO,KAAKC,EAAE,MAAM,IAAI;AAExB,MAAMC,KAAK,GAAGA,CAAC;EAAEC,cAAc;EAAEC;AAAgB,CAAC,KAAK;EACrD,MAAMC,MAAM,GAAGL,MAAM,CAAC,IAAI,CAAC;EAE3BD,SAAS,CAAC,MAAM;IACd,MAAMO,GAAG,GAAGL,EAAE,CAACM,MAAM,CAACF,MAAM,CAACG,OAAO,CAAC;IAErC,MAAMC,cAAc,GAAGC,MAAM,CAACC,UAAU;IACxC,MAAMC,eAAe,GAAGF,MAAM,CAACG,WAAW;IAE1CP,GAAG,CAACQ,IAAI,CAAC,OAAO,EAAEL,cAAc,CAAC,CAC9BK,IAAI,CAAC,QAAQ,EAAEF,eAAe,CAAC;IAElCN,GAAG,CAACS,SAAS,CAAC,GAAG,CAAC,CAACC,MAAM,CAAC,CAAC;IAE3B,IAAIb,cAAc,IAAIA,cAAc,CAACc,GAAG,EAAE;MACxC,MAAMC,YAAY,GAAG;QAAEC,EAAE,EAAEhB,cAAc,CAACc,GAAG;QAAEG,KAAK,EAAEjB,cAAc,CAACc;MAAI,CAAC;MAE1EI,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,YAAY,CAAC;MAE3C,MAAMK,UAAU,GAAGjB,GAAG,CAACkB,MAAM,CAAC,GAAG,CAAC;MAElC,MAAMC,kBAAkB,GAAG,EAAE;MAC7BF,UAAU,CAACC,MAAM,CAAC,QAAQ,CAAC,CACxBV,IAAI,CAAC,IAAI,EAAEL,cAAc,GAAG,CAAC,CAAC,CAC9BK,IAAI,CAAC,IAAI,EAAEF,eAAe,GAAG,CAAC,CAAC,CAC/BE,IAAI,CAAC,GAAG,EAAEW,kBAAkB,CAAC,CAC7BX,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBY,EAAE,CAAC,OAAO,EAAE,MAAM;QACjB,IAAItB,eAAe,EAAE;UACnBA,eAAe,CAACc,YAAY,CAACC,EAAE,CAAC;QAClC;MACF,CAAC,CAAC;MAEJ,IAAIhB,cAAc,CAACwB,YAAY,EAAE;QAC/B,MAAMC,eAAe,GAAG,GAAG;QAC3B,MAAMC,QAAQ,GAAGjB,eAAe,GAAG,CAAC;QAEpCT,cAAc,CAACwB,YAAY,CAACG,OAAO,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;UACzD,MAAMC,YAAY,GAAG;YAAEd,EAAE,EAAEY,UAAU;YAAEX,KAAK,EAAEW;UAAW,CAAC;UAE1DV,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEW,YAAY,CAAC;UAE3C,MAAMC,SAAS,GAAGL,QAAQ,GAAG,CAACG,KAAK,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAKA,KAAK,GAAG,CAAC,CAAC,GAAGJ,eAAe,GAAG,CAAC;UAE3FL,UAAU,CAACC,MAAM,CAAC,QAAQ,CAAC,CACxBV,IAAI,CAAC,IAAI,EAAEL,cAAc,GAAG,CAAC,GAAGmB,eAAe,CAAC,CAChDd,IAAI,CAAC,IAAI,EAAEoB,SAAS,CAAC,CACrBpB,IAAI,CAAC,GAAG,EAAE,EAAE,CAAC,CACbA,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC,CACvBY,EAAE,CAAC,OAAO,EAAE,MAAM;YACjB,IAAItB,eAAe,EAAE;cACnBA,eAAe,CAAC6B,YAAY,CAACd,EAAE,CAAC;YAClC;UACF,CAAC,CAAC;UAEJ,MAAMgB,WAAW,GAAG1B,cAAc,GAAG,CAAC,GAAGmB,eAAe;UACxD,MAAMQ,WAAW,GAAGF,SAAS;UAC7B,MAAMG,SAAS,GAAG5B,cAAc,GAAG,CAAC;UACpC,MAAM6B,SAAS,GAAG1B,eAAe,GAAG,CAAC;UAErC,MAAM2B,KAAK,GAAGC,IAAI,CAACC,KAAK,CAACL,WAAW,GAAGE,SAAS,EAAEH,WAAW,GAAGE,SAAS,CAAC;UAE1E,MAAMK,UAAU,GAAGL,SAAS,GAAGG,IAAI,CAACG,GAAG,CAACJ,KAAK,CAAC,GAAGd,kBAAkB;UACnE,MAAMmB,UAAU,GAAGN,SAAS,GAAGE,IAAI,CAACK,GAAG,CAACN,KAAK,CAAC,GAAGd,kBAAkB;UAEnE,MAAMqB,aAAa,GAAG,EAAE;UACxB,MAAMC,KAAK,GAAG9C,EAAE,CAAC+C,MAAM,CAAC,CAAC,CAACC,IAAI,CAAChD,EAAE,CAACiD,cAAc,CAAC,CAACC,IAAI,CAACL,aAAa,CAAC;UACrE,MAAMM,QAAQ,GAAG,CACf,CAACjB,WAAW,EAAEC,WAAW,CAAC,EAC1B,CAACM,UAAU,EAAEE,UAAU,CAAC,CACzB;UAEDrB,UAAU,CAACC,MAAM,CAAC,MAAM,CAAC,CACtBV,IAAI,CAAC,GAAG,EAAEiC,KAAK,CAAC,CAChBjC,IAAI,CAAC,WAAW,EAAG,aAAYuB,SAAU,IAAGC,SAAU,YAAWC,KAAK,IAAI,GAAG,GAAGC,IAAI,CAACa,EAAE,CAAC,GAAG,EAAG,GAAE,CAAC,CACjGvC,IAAI,CAAC,MAAM,EAAE,SAAS,CAAC;UAE1BS,UAAU,CAACC,MAAM,CAAC,MAAM,CAAC,CACtBV,IAAI,CAAC,GAAG,EAAEb,EAAE,CAACqD,IAAI,CAAC,CAAC,CAACF,QAAQ,CAAC,CAAC,CAC9BtC,IAAI,CAAC,QAAQ,EAAE,SAAS,CAAC,CACzBA,IAAI,CAAC,cAAc,EAAE,CAAC,CAAC;QAC5B,CAAC,CAAC;MACJ;IACF;EAEF,CAAC,EAAE,CAACX,cAAc,EAAEC,eAAe,CAAC,CAAC;EAErC,oBACEN,KAAA,CAAAyD,aAAA;IAAKC,GAAG,EAAEnD,MAAO;IAACoD,KAAK,EAAE;MAAEC,MAAM,EAAE;IAAiB,CAAE;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAEjD,CAAC;AAEV,CAAC;AAED,eAAe9D,KAAK"},"metadata":{},"sourceType":"module"}