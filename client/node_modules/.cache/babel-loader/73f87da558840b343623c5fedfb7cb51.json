{"ast":null,"code":"var _jsxFileName = \"/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Form/PositionToKnowForm.js\";\nimport React, { useState } from 'react';\nimport { TextField, Button, Typography, Container } from '@material-ui/core';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { createPositionToKnowSchema } from '../../actions/arguments';\nconst PositionToKnowForm = () => {\n  const classes = useStyles();\n  const [formData, setFormData] = useState({\n    P: '',\n    A: '',\n    isReply: false,\n    chosenCriticalQuestion: null\n  });\n  const dispatch = useDispatch();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      ...formData,\n      isAttackedBy: []\n    };\n    const endpoint = 'http://localhost:8000/argumentSchemas/position-to-know';\n    console.log('Payload sent to createArgument position-to-know:', payload);\n    if ('P' in formData && 'A' in formData) {\n      try {\n        await dispatch(createPositionToKnowSchema(payload, endpoint));\n        setFormData({\n          P: '',\n          A: '',\n          isReply: false,\n          chosenCriticalQuestion: null\n        });\n      } catch (error) {\n        console.log(\"Error creating position to know schema\", error);\n      }\n    } else {\n      console.error('Missing properties in formData:', formData);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, \"Create a new position to know argument\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.form,\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"P\",\n    label: `P is in a position to know`,\n    name: \"P\",\n    value: formData.P,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"A\",\n    label: `whether proposition A is true or not`,\n    name: \"A\",\n    value: formData.A,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    fullWidth: true,\n    multiline: true,\n    minRows: 4,\n    disabled: true,\n    label: `P asserts that proposition A is true`,\n    value: `${formData.P} asserts that proposition \"${formData.A}\" is true`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  }, \"Submit\"))));\n};\nexport default PositionToKnowForm;","map":{"version":3,"names":["React","useState","TextField","Button","Typography","Container","useStyles","useDispatch","createPositionToKnowSchema","PositionToKnowForm","classes","formData","setFormData","P","A","isReply","chosenCriticalQuestion","dispatch","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","isAttackedBy","endpoint","console","log","error","createElement","component","maxWidth","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","paper","variant","form","onSubmit","margin","required","fullWidth","id","label","onChange","multiline","minRows","disabled","type","color","submit"],"sources":["/home/mahfuzur/Desktop/argupedia_githubrepo/argupedia/client/src/components/Form/PositionToKnowForm.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { TextField, Button, Typography, Container } from '@material-ui/core';\nimport useStyles from './styles';\nimport { useDispatch } from 'react-redux';\nimport { createPositionToKnowSchema } from '../../actions/arguments';\n\n\nconst PositionToKnowForm = () => {\n    const classes = useStyles();\n\n    const [formData, setFormData] = useState({\n        P: '',\n        A: '',\n        isReply: false,\n        chosenCriticalQuestion: null,\n    });\n\n    const dispatch = useDispatch();\n\n    const handleChange = (e) => {\n        setFormData({ ...formData, [e.target.name]: e.target.value });\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        const payload = { ...formData, isAttackedBy: [] };\n\n        const endpoint = 'http://localhost:8000/argumentSchemas/position-to-know'; \n        console.log('Payload sent to createArgument position-to-know:', payload);\n\n        if ('P' in formData && 'A' in formData) {\n            try {\n                await dispatch(createPositionToKnowSchema(payload, endpoint));\n                setFormData({\n                    P: '',\n                    A: '',\n                    isReply: false,\n                    chosenCriticalQuestion: null,\n                });      \n            } catch (error) {\n                console.log(\"Error creating position to know schema\", error);\n            }\n        } else {\n            console.error('Missing properties in formData:', formData);\n        }\n    };  \n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <div className={classes.paper}>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Create a new position to know argument\n                </Typography>\n                <form className={classes.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"P\"\n                        label={`P is in a position to know`}\n                        name=\"P\"\n                        value={formData.P}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"A\"\n                        label={`whether proposition A is true or not`}\n                        name=\"A\"\n                        value={formData.A}\n                        onChange={handleChange}\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        fullWidth\n                        multiline\n                        minRows={4}\n                        disabled\n                        label={`P asserts that proposition A is true`}\n                        value={`${formData.P} asserts that proposition \"${formData.A}\" is true`}\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Submit\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n};\n\nexport default PositionToKnowForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}